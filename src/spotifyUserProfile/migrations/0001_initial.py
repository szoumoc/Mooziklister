# Generated by Django 4.2.23 on 2025-07-07 07:46

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Create_Playlist",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("public", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "playlist_uri",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlaylistSpotifyResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SpotifyUserProfile",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("spotify_id", models.CharField(max_length=100, unique=True)),
                ("email", models.EmailField(default="", max_length=254)),
                ("access_token", models.TextField(default="")),
                ("refresh_token", models.TextField(default="")),
            ],
        ),
        migrations.CreateModel(
            name="TrackQuery",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("query", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="PlaylistImage",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("image", models.ImageField(upload_to="playlist_images/")),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "playlist_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="spotifyUserProfile.create_playlist",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="get_track",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("track_id", models.CharField(max_length=255)),
                (
                    "query",
                    models.OneToOneField(
                        default=0,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="spotifyUserProfile.trackquery",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="create_playlist",
            name="spotify_user_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="spotifyUserProfile.spotifyuserprofile",
            ),
        ),
        migrations.CreateModel(
            name="add_these_tracks",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("position", models.IntegerField(blank=True, null=True)),
                ("uris", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "playlist_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tracks",
                        to="spotifyUserProfile.create_playlist",
                    ),
                ),
            ],
        ),
    ]
